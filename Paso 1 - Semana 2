%PROBLEMA #1. Este problema es el más sencillo posible. El script debe abrir una ventana de psychtoolbox (que ocupe la pantalla completa). 
%La pantalla debe de ser de color gris. Debe mantenerse activa (toda la pantalla gris) durante 5 segundos y luego debe terminar el programa.

clear all;
clearvars;
sca

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);


white = WhiteIndex(screenNumber);
grey = white / 2;
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

WaitSecs(5);
sca



%%PROBLEMA 2. Se abre un pantalla de fondo gris (como en el problema 1).
%Sobre la misma, dibuja un cuadrado de 400 pixeles de lado de color rojo, que está 2 segundo en el centro, 
%luego desaparece un segundo, y luego aparece en el lado izquierdo de la pantalla otros 2 segundos.

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);


white = WhiteIndex(screenNumber);
grey = white / 2;
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect)
baseRect = [0 0 400 400]
centeredRect = CenterRectOnPointd(baseRect, xCenter, yCenter)
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);
Screen('Flip', window);
WaitSecs(2);

Screen('FillRect', window, grey);
Screen('Flip', window);
WaitSecs(1);

baseRect= [0 0 400 400]
centeredRect2 = CenterRectOnPointd(BaseRect, xCenter - 400, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect2)
Screen('Flip', window);
WaitSecs(2);
sca;


%PROBLEMA 3.En lugar de hacer que el cuadrado rojo tenga 400 pixeles de lado, haz que tenga 1/4 del número de píxeles totales que la pantalla tiene de alto.
%Este modo de poner los tamaños de los objetos (relativos al tamaño de la pantalla) es muy útil para trabajar en diferentes equipos/labs.

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);


white = WhiteIndex(screenNumber);
grey = white / 2;
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect)
baseRect = [0 0 screenXpixels/4, screenYpixels/4]
centeredRect = CenterRectOnPointd(baseRect, xCenter, yCenter)
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);
Screen('Flip', window);
WaitSecs(2);
sca;



%PROBLEMA 4.En lugar de aparecer 5 segundos en la pantalla cada vez, intenta que aparezca por una cantidad de tiempo pseudo-aleatoria, 
%con un mínimo de 3 segundos y un máximo de 7 segundos.

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);

pseudoal = [3:7];
election = randperm(4);
time = pseudoal (election(1));

white = WhiteIndex(screenNumber);
grey = white / 2;
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect)
baseRect = [0 0 400 400]
centeredRect = CenterRectOnPointd(baseRect, xCenter, yCenter)
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);
Screen('Flip', window);
WaitSecs(time);

Screen('FillRect', window, grey);
Screen('Flip', window);
WaitSecs(1);

baseRect= [0 0 400 400]
centeredRect2 = CenterRectOnPointd(BaseRect, xCenter - 400, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect2)
Screen('Flip', window);
WaitSecs(time);
sca;



%PROBLEMA 5. En experimentos de búsqueda visual es importante que los participantes miren al centro de la pantalla al principio de cada ensayo. 
%Para conseguirlo, se suele incluir un "punto de fijación" antes del ensayo de búsqueda visual.
%Vamos a poner un punto de fijación para nuestro experimento. 
%Programa un pequeña cruz (+) de color blanco que aparezca en el centro de la pantalla un tiempo variable 
%(mínimo 0.2 segundos, máximo 0.5 segundos). 
%Justo después de la cruz continúa el "ensayo" con la presentación del cuadrado rojo, tal y como estaba en el problema #4.

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);

pseudoal = [0.2 : 0.1 : 0.5];
election = randperm(4);
time1 = pseudoal (election(1));

white = WhiteIndex(screenNumber);
grey = white / 2;
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
Screen('BlendFunction', window, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');
[xCenter, yCenter] = RectCenter(windowRect)

fixCrossDimPix = 40;
xCoords = [-fixCrossDimPix fixCrossDimPix 0 0];
yCoords = [0 0 -fixCrossDimPix fixCrossDimPix];
allCoords = [xCoords; yCoords];
lineWidthPix = 4;
Screen('DrawLines', window, allCoords, lineWidthPix, white, [xCenter, yCenter], 2);
Screen('Flip', window)
WaitSecs(time1);


pseudoal = [3:7];
election = randperm(4);
time2 = pseudoal (election(1));
baseRect = [0 0 400 400];
centeredRect = CenterRectOnPointd(baseRect, xCenter, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);
Screen('Flip', window);
WaitSecs(time2);

Screen('FillRect', window, grey);
Screen('Flip', window);
WaitSecs(1);

baseRect= [0 0 400 400];
centeredRect2 = CenterRectOnPointd(BaseRect, xCenter - 400, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect2)
Screen('Flip', window);
WaitSecs(time2);
sca;


%PROBLEMA 6. Después del punto de fijación debe aparecer un círculo verde a la derecha de la pantalla, y el cuadrado rojo a la izquierda de la pantalla. 
%Ambos estímulos deben de estar alejados del centro de la pantalla 1/4 del alto de la pantalla.
%Deben de permanecer en pantalla 2 segundos, y luego termina el ensayo.

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);

pseudoal = [0.2 : 0.1 : 0.5];
election = randperm(4);
time1 = pseudoal (election(1));

white = WhiteIndex(screenNumber);
grey = white / 2;
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
Screen('BlendFunction', window, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');
[xCenter, yCenter] = RectCenter(windowRect)

fixCrossDimPix = 40;
xCoords = [-fixCrossDimPix fixCrossDimPix 0 0];
yCoords = [0 0 -fixCrossDimPix fixCrossDimPix];
allCoords = [xCoords; yCoords];
lineWidthPix = 4;
Screen('DrawLines', window, allCoords, lineWidthPix, white, [xCenter, yCenter], 2);
Screen('Flip', window)
WaitSecs(time1);


baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(2);

sca;

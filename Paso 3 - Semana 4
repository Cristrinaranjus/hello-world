PROBLEMA #10: 
Vamos a poner el “dot” en nuestra “dot probe”. 
Programa un pequeño cuadrado blanco (50 pixeles de lado) que aparezca en el centro de nuestro cuadrado cuando los estímulos 
lleven en la pantalla 250 ms. Este cuadrado blanco es el “dot probe”. Es decir, cada ensayo sería ahora: 
Cruz de fijación-->Estímulos(250 ms) --> Estímulos + “dot probe” (1750 ms) -->Pantalla vacía
(TIP: Para presentar los Estímulos + “dot probe” tendrás que dibujar todos los estímulos de nuevo, 
y añadir el código para dibujar el "dot probe".) 

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);


time=0.250;
timedot=1.750;
timefix= 0.2+(0.5-0.2).*rand;

white = WhiteIndex(screenNumber);
grey = white / 2;
n=6;
tipo_trial= zeros (1,n);
tipo_trial(1,1:n/2)=1; 
tipo_trial(1,(n/2+1):end)=2;

[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
Screen('BlendFunction', window, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');
[xCenter, yCenter] = RectCenter(windowRect)

for i = 1:n
fixCrossDimPix = 40;
xCoords = [-fixCrossDimPix fixCrossDimPix 0 0];
yCoords = [0 0 -fixCrossDimPix fixCrossDimPix];
allCoords = [xCoords; yCoords];
lineWidthPix = 4;
Screen('DrawLines', window, allCoords, lineWidthPix, white, [xCenter, yCenter], 2);
Screen('Flip', window)
WaitSecs(timefix);

%%Estímulos sin "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);
end

if tipo_trial(1,i)==2;
    baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);
end;

%%Estímulos con "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

baseRect = [0 0 50 50];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [255 255 255];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(timedot);
end

if tipo_trial(1,i)==2;
    baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

baseRect = [0 0 50 50];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [255 255 255];
Screen('FillRect', window, rectColor, centeredRect);


[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(timedot);
end;

Screen('FillRect', window, grey);
Screen('Flip', window);
WaitSecs(0.5);
end;
sca;





PROBLEMA #11: 
En este problema vamos a crear ensayos congruentes y otros incongruentes.
Haz que el “dot probe” aparezca en el centro del círculo 1/3 de los ensayos (ensayos incongruentes). 
Los restantes 2/3 de los ensayos (ensayos congruentes) la “dot probe” aparecerá en el centro del cuadrado (como en el problema #10). 
(TIP: Añade una fila más a <tipo_trial>. La primera fila seguirá sirviendo para indicar la posición de los estímulos (cuadrado y círculo). 
La segunda fila la podemos usar para indicar la posición del dot probe) 


PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);

n=6;

white = WhiteIndex(screenNumber);
grey = white / 2;

tipo_trial= zeros (2,n);
tipo_trial(1,1:n/2)=1; 
tipo_trial(1,(n/2+1):end)=2;
tipo_trial(2,1:n/3)=1
tipo_trial(2,(n/3*2-1):end)=2;

[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
Screen('BlendFunction', window, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');
[xCenter, yCenter] = RectCenter(windowRect)

for i = 1:n
    time=0.250;
    timedot=1.750;
    timefix= 0.2+(0.5-0.2).*rand;
fixCrossDimPix = 40;
xCoords = [-fixCrossDimPix fixCrossDimPix 0 0];
yCoords = [0 0 -fixCrossDimPix fixCrossDimPix];
allCoords = [xCoords; yCoords];
lineWidthPix = 4;
Screen('DrawLines', window, allCoords, lineWidthPix, white, [xCenter, yCenter], 2);
Screen('Flip', window)
WaitSecs(timefix);

%%Estímulos sin "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);

elseif tipo_trial(1,i)==2;
    baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);
end;

%%Estímulos con "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
    if tipo_trial(2,i) == 1
    baseRect = [0 0 50 50];
    centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
    rectColor = [255 255 255];
    Screen('FillRect', window, rectColor, centeredRect);
    elseif tipo_trial (2,i) == 2
    baseRect = [0 0 50 50];
    centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
    rectColor = [255 255 255];
    Screen('FillRect', window, rectColor, centeredRect);
    end
Screen('Flip', wPtr);
WaitSecs(timedot);

elseif tipo_trial(1,i)==2;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
    if tipo_trial (2,i) == 1
        baseRect = [0 0 50 50];
        centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
        rectColor = [255 255 255];
        Screen('FillRect', window, rectColor, centeredRect);
    elseif tipo_trial (2,i) == 2
        baseRect = [0 0 50 50];
        centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
        rectColor = [255 255 255];
        Screen('FillRect', window, rectColor, centeredRect);
    end
Screen ('Flip', wPtr); WaitSecs(timedot);
end;

Screen('FillRect', window, grey);
Screen('Flip', window);
WaitSecs(0.5);
end;
sca;


PROBLEMA #12: 
Cambia la duración de los estímulos en pantalla. 
A partir de ahora, cuando estén en la pantalla los estímulos más la dot probe, 
el participante tendrá que pulsar una flecha del teclado para poder seguir con el experimento.
¡No vale una flecha cualquiera! Tiene que pulsar la flecha con la misma dirección que la posición de la dot probe. 
Es decir, si la dot probe está a la izquierda, hay que pulsar la tecla (ß) para pasar a la siguiente pantalla. 

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);

n=6;
ListenChar(2);
[KeyIsDown, endrt, KeyCode]=KbCheck;
white = WhiteIndex(screenNumber);
grey = white / 2;

tipo_trial= zeros (2,n);
tipo_trial(1,1:n/2)=1; 
tipo_trial(1,(n/2+1):end)=2;
tipo_trial(2,1:n/3)=1
tipo_trial(2,(n/3*2-1):end)=2;

KbName('UnifyKeyNames');
right_key=KbName('RightArrow');
left_key=KbName('LeftArrow');
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
Screen('BlendFunction', window, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');
[xCenter, yCenter] = RectCenter(windowRect)

for i = 1:n
    time=0.250;
    timedot=1.750;
    timefix= 0.2+(0.5-0.2).*rand;
fixCrossDimPix = 40;
xCoords = [-fixCrossDimPix fixCrossDimPix 0 0];
yCoords = [0 0 -fixCrossDimPix fixCrossDimPix];
allCoords = [xCoords; yCoords];
lineWidthPix = 4;
Screen('DrawLines', window, allCoords, lineWidthPix, white, [xCenter, yCenter], 2);
Screen('Flip', window)
WaitSecs(timefix);

%%Estímulos sin "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);

elseif tipo_trial(1,i)==2;
    baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);
end;

%%Estímulos con "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
    if tipo_trial(2,i) == 1
    baseRect = [0 0 50 50];
    centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
    rectColor = [255 255 255];
    Screen('FillRect', window, rectColor, centeredRect);
    elseif tipo_trial (2,i) == 2
    baseRect = [0 0 50 50];
    centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
    rectColor = [255 255 255];
    Screen('FillRect', window, rectColor, centeredRect);
    end
Screen('Flip', wPtr);
WaitSecs(timedot);

 FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        FlushEvents; 
   end

elseif tipo_trial(1,i)==2;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
    if tipo_trial (2,i) == 1
        baseRect = [0 0 50 50];
        centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
        rectColor = [255 255 255];
        Screen('FillRect', window, rectColor, centeredRect);
    elseif tipo_trial (2,i) == 2
        baseRect = [0 0 50 50];
        centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
        rectColor = [255 255 255];
        Screen('FillRect', window, rectColor, centeredRect);
    end
Screen ('Flip', wPtr); WaitSecs(timedot);
FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        FlushEvents;
   end
end;

Screen('FillRect', window, grey);
Screen('Flip', window);
WaitSecs(0.5);
end;
sca;


PROBLEMA #13: 
Haz que el orden de los ensayos sea aleatorio. 
(TIP: Puedes “desordenar” las columnas de la matriz tipo_trial una vez que esté creada usando “randperm”).

PsychDefaultSetup(2);
screens = Screen('Screens');
screenNumber = max(screens);

n=6;
ListenChar(2);
[KeyIsDown, endrt, KeyCode]=KbCheck;
white = WhiteIndex(screenNumber);
grey = white / 2;

tipo_trial= zeros (2,n);
tipo_trial(1,1:n/2)=1; 
tipo_trial(1,(n/2+1):end)=2;
tipo_trial(2,1:n/3)=1
tipo_trial(2,(n/3*2-1):end)=2;

random_order = randperm(n);
tipo_trial(1,:)= tipo_trial(1,random_order);
tipo_trial(2,:)= tipo_trial(2,random_order);

KbName('UnifyKeyNames');
right_key=KbName('RightArrow');
left_key=KbName('LeftArrow');
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, grey);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
Screen('BlendFunction', window, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');
[xCenter, yCenter] = RectCenter(windowRect)

for i = 1:n
    time=0.250;
    timedot=1.750;
    timefix= 0.2+(0.5-0.2).*rand;
fixCrossDimPix = 40;
xCoords = [-fixCrossDimPix fixCrossDimPix 0 0];
yCoords = [0 0 -fixCrossDimPix fixCrossDimPix];
allCoords = [xCoords; yCoords];
lineWidthPix = 4;
Screen('DrawLines', window, allCoords, lineWidthPix, white, [xCenter, yCenter], 2);
Screen('Flip', window)
WaitSecs(timefix);

%%Estímulos sin "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);

elseif tipo_trial(1,i)==2;
    baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
WaitSecs(time);
end;

%%Estímulos con "dot probe"
if tipo_trial(1,i) == 1;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter+screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
    if tipo_trial(2,i) == 1
    baseRect = [0 0 50 50];
    centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
    rectColor = [255 255 255];
    Screen('FillRect', window, rectColor, centeredRect);
    elseif tipo_trial (2,i) == 2
    baseRect = [0 0 50 50];
    centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
    rectColor = [255 255 255];
    Screen('FillRect', window, rectColor, centeredRect);
    end
Screen('Flip', window);
WaitSecs(timedot);

 FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        FlushEvents; 
   end
KeyCode (right_key)=0; KeyCode (left_key)=0;

elseif tipo_trial(1,i)==2;
baseRect = [0 0 300 300];
centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
rectColor = [1 0 0];
Screen('FillRect', window, rectColor, centeredRect);

[screenXpixels, screenYpixels] = Screen('WindowSize', window);
[xCenter, yCenter] = RectCenter(windowRect);
baseOval= [0 0 300 300]
maxDiameter = max(baseRect)*1.01;
centeredRect2 = CenterRectOnPointd(baseOval, xCenter-screenYpixels/4, yCenter);
OvalColor = [0 1 0]
Screen('FillOval', window, OvalColor, centeredRect2, maxDiameter);
Screen('Flip', window);
    if tipo_trial (2,i) == 1
        baseRect = [0 0 50 50];
        centeredRect = CenterRectOnPointd(baseRect, xCenter+screenYpixels/4, yCenter);
        rectColor = [255 255 255];
        Screen('FillRect', window, rectColor, centeredRect);
    elseif tipo_trial (2,i) == 2
        baseRect = [0 0 50 50];
        centeredRect = CenterRectOnPointd(baseRect, xCenter-screenYpixels/4, yCenter);
        rectColor = [255 255 255];
        Screen('FillRect', window, rectColor, centeredRect);
    end
Screen ('Flip', window); WaitSecs(timedot);
FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        
   end
   KeyCode (right_key)=0; KeyCode (left_key)=0;
end;

Screen('FillRect', window, grey);
Screen('Flip', window);
WaitSecs(0.5);
end;
sca;
